syntax = "proto3";

message IrisSpeciesPredictionRequest {
    float SepalLengthCm = 1;
    float SepalWidthCm = 2;
    float PetalLengthCm = 3;
    float PetalWidthCm = 4;
    string PathToModel = 5;
}

message IrisSpeciesPredictionResponse {
   string species = 1;
}
message CreateAndTrainModelRequest {
    map<string, string> dataset_params = 1;
    map<string, string> train_params = 2;
    map<string, string> test_params = 3;
    map<string, string> optimizer_params = 4;
    string criterion = 5;
    map<string, string> model_params = 6;
    string save_model_at = 7;
}

message CreateAndTrainModelResponse{
    float accuracy = 1;
    string saved_model_path = 2;
}

service Predictions {
    rpc IrisSpeciesPredict (IrisSpeciesPredictionRequest) returns (IrisSpeciesPredictionResponse);
    rpc CreateAndTrainModel (CreateAndTrainModelRequest) returns (CreateAndTrainModelResponse);
}